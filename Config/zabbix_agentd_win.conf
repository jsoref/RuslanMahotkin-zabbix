# Common parameters -------------------------------------------------------------

### Logging type: system - Windows event log,
# file - file from the LogFile parameter, console - standard output (file)
LogType = system
### The full name of the log file with 'LogType = file' ()
#LogFile = c:\zabbix_agentd.log
# The maximum size of the log file is 0-1024 in MB; 0 - rotation off (1)
#LogFileSize = 1
# Log debugging level: 0 - absent, 1 - critical, 2 - errors,
# 3 - warnings, 4 - debugging, 5 - advanced debugging (3)
#DebugLevel = 3

### IP address of the source of outgoing connections ()
SourceIP = IP.address.zabbix.agent

# Enable remote commands from Zabbix server (0)
#EnableRemoteCommands = 0
# Logging shell command execution as warnings (0)
#LogRemoteCommands = 0


# Passive checks ----------------------------------------------------------

### Comma-delimited list of IP addresses / names for incoming connections
# Zabbix servers ()
Server = IP.address.zabbix.server
# Listening port 1024-32767 (10050)
#ListenPort = 10050
### Comma-delimited list of IP addresses to listen to; the first is sent to the server
# when getting a list of active checks (0.0.0.0)
ListenIP = IP.zabbix.agent.agent
# The number of instances of the agent for passive checks 0-100; 0 - off
# passive checks and listening on TCP port (3)
#StartAgents = 3


# Active checks -----------------------------------------------------------

### Comma delimited IP address / name: server port for active checks;
# port is not set - silent; not set - disable active checks ()
ServerActive = IP.zabbix.server
### Unique case-sensitive computer name; not specified - HostnameItem ()
Hostname = DNS.server.name
# Generated name with undefined Hostname (system.hostname)
#HostnameItem = system.hostname
# Host metadata up to 255 characters for auto-registration; not set - HostMetadataItem ()
#HostMetadata =
# Element to get host metadata up to 255 characters for autoregistration
# when HostMetadata is unset ()
#HostMetadataItem =

# Period of updating the list of active checks in seconds 60-3600 (120)
#RefreshActiveChecks = 120
# Buffer data storage time in seconds 1-3600 (5)
#BufferSend = 5
# Maximum number of values in the buffer; by filling it in - sending data
# server / proxy 2-65535 (100)
#BufferSize = 100
# Maximum number of lines per second sent to server / proxy active
# checks 'log' and 'logrt'; overrides the 'maxlines' parameter 1-1000 (20)
#MaxLinesPerSecond = 20


# Advanced Options ---------------------------------------------------------------

# Parameter alias
#Alias

### Processing timeout in seconds 1-30 (3)
Timeout = 10

# Determine the parameters of the average value of the performance counter for the period
# in seconds. Format:
# PerfCounter = <parameter>, "<\ Path\counter\performance>", <period>
# The path of the performance counter in double quotes; data to calculate
# average values should be taken every second; "typeperf -qx" - list of counters
#PerfCounter =

# Include files / directories in configuration ()
#Include =


# User-defined parameters ----------------------------------------

### Allow all characters in arguments to pass user-defined
# parameters; forbidden characters \ '"` *? [] {} ~ $! &; () <> | # @ and newline (0)
UnsafeUserParameters = 1
### User-defined parameters for monitoring; format:
# UserParameter=<key>, <shell command>
# PostgreSQL
#UserParameter=postgresql_status, powershell -File "c:\Scripts\postgresql_stat.ps1"
#UserParameter=postgresql.discovery_databases, powershell -File "c:\Scripts\postgresql_stat.ps1" db
# RabbitMQ
#UserParameter=rabbitmq_status, powershell -File "c:\Scripts\rabbitmq_stat.ps1"
#UserParameter=rabbitmq.discovery_queues, powershell -File "c:\Scripts\rabbitmq_stat.ps1" queues


# TLS -------------------------------------------------------------------------

# Agent connection to server / proxy with active checks (unencrypted):
# unencrypted - without encryption, psk - TLS pre-shared key,
# cert - TLS certificate
#TLSConnect = unencrypted
# Inbound connections (unencrypted):
# unencrypted - without encryption, psk - TLS pre-shared key,
# cert - TLS certificate
#TLSAccept = unencrypted
# Full name of CA certificate file ()
#TLSCAFile =
# Full file name of revoked certificates ()
#TLSCRLFile =
# Allowed issuer of server certificate ()
#TLSServerCertIssuer =
# Permitted server certificate subject ()
#TLSServerCertSubject =
# Full name of the agent certificate file or certificate chain ()
#TLSCertFile =
# Full name of agent private key file ()
#TLSKeyFile =
# Case-sensitive pre-shared key string ()
#TLSPSKIdentity =
# Full name of pre shared key file ()
#TLSPSKFile =
